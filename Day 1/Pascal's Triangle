//  Time -O(N*N)
//    My code
class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> ans;
        vector<int>v(1,1);
        ans.push_back(v);
        
        for(int i=1;i<numRows;i++){
            vector<int> v;
            v.push_back(1);
            for(int j=0;j+1<ans[i-1].size();j++){
                v.push_back(ans[i-1][j]+ans[i-1][j+1]);
            }
            v.push_back(1);
            ans.push_back(v);
        }
        return ans;
    }
};

//    Striver's Code 
//    More Cleaner
class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> r(numRows);

        for (int i = 0; i < numRows; i++) {
            r[i].resize(i + 1);
            r[i][0] = r[i][i] = 1;
  
            for (int j = 1; j < i; j++)
                r[i][j] = r[i - 1][j - 1] + r[i - 1][j];
        }
        
        return r;
    }
};
