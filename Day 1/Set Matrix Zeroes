//  TIME-O(2*N*M) SPACE-O(1)
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int col0=false;
        for(int i=0;i<matrix.size();i++){
            if(matrix[i][0] == 0){
                    col0=true;
            }
            for(int j=1;j<matrix[i].size();j++){
                if(matrix[i][j]==0){
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        for(int i=1;i<matrix.size();i++){
            for(int j=1;j<matrix[i].size();j++){
                if(matrix[i][0] == 0 || matrix[0][j] == 0){
                    matrix[i][j] = 0;
                } 
            }
        }
        for(int i=matrix[0].size()-1;i>=0;i--){
            if(matrix[0][0] == 0) matrix[0][i] = 0;
        }
        for(int i=matrix.size()-1;i>=0;i--){
            if(col0) matrix[i][0] = 0;
        }
    }
};

//   TIME - O(N*M) SPACE - O(N+M)
#include <bits/stdc++.h> 
void setZeros(vector<vector<int>> &matrix)
{
    vector<int>col(matrix[0].size(),1);
    vector<int>row(matrix.size(),1);
    for(int i=0;i<matrix.size();i++){
        for(int j=0;j<matrix[i].size();j++){
            if(matrix[i][j] == 0){
                col[j] = 0;
                row[i] = 0;
            }        
        }
    }
    for(int i=0;i<matrix.size();i++){
        for(int j=0;j<matrix[i].size();j++){
            if(col[j]==0 || row[i]==0) matrix[i][j]=0;
        }
    }
}
