//   Subarray Logic
#include <bits/stdc++.h> 
int subarraysXor(vector<int> &a, int x)
{
    //    Write your code here.
    int  count = 0;
    for(int i = 0; i < a.size(); ++i){
        int sum = 0;
        for(int j = i; j < a.size(); ++j){
            sum ^= a[j];
            if(sum == x){
                count++;
            }
        }
    }
    return count;
}

//   XOR Logic 
#include <bits/stdc++.h> 
int subarraysXor(vector<int> &a, int x)
{
    //    Write your code here.
    int  count = 0,xr = 0;
    unordered_map<int,int>map;
    for(int i = 0; i < a.size(); ++i){
        xr ^= a[i];
        if(xr == x) count++;
        if(map[xr^x]) count+=map[xr^x];   // as we have already found xor so use if not else-if
        map[xr] += 1;
    }
    return count;
}
